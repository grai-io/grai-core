# Generated by Django 4.2.1 on 2023-05-30 08:26

import uuid

import django.db.models.deletion
import django_multitenant.mixins
import django_multitenant.models
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("workspaces", "0006_workspace_workspaces__name_5adeb1_idx"),
        ("connections", "0020_connector_events_alter_run_action"),
        ("lineage", "0006_edge_lineage_edg_workspa_8dbd89_idx_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Event",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("reference", models.CharField(max_length=255)),
                ("date", models.DateTimeField()),
                (
                    "status",
                    models.CharField(
                        choices=[("success", "success"), ("error", "error"), ("cancelled", "cancelled")],
                        default="success",
                        max_length=255,
                    ),
                ),
                ("metadata", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "connection",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="events",
                        to="connections.connection",
                    ),
                ),
                ("nodes", models.ManyToManyField(to="lineage.node")),
                (
                    "workspace",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, related_name="events", to="workspaces.workspace"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=(django_multitenant.mixins.TenantModelMixin, models.Model),
            managers=[
                ("objects", django_multitenant.models.TenantManager()),
            ],
        ),
    ]
