version: "3.7"

services:
  the_guide:
    build:
      context: ./app
      target: grai-server
    volumes:
      - ./app/:/usr/src/app/
    ports:
      - 8000:8000
    environment:
      - DB_HOST=db
      - REDIS_HOST=redis
      - DJANGO_SETTINGS_MODULE=the_guide.settings.dev
      - CREATE_SAMPLE_DATA=true
      - DJANGO_SUPERUSER_USERNAME=null@grai.io
      - DJANGO_SUPERUSER_PASSWORD=super_secret
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_ORG_ID=${OPENAI_ORG_ID}
    depends_on:
      - redis
      - db
    healthcheck:
      test: "curl -f -v -H 'Accept: application/json' http://localhost:8000/health/"
      interval: 2s
      timeout: 5s
      retries: 10
      start_period: 20s

  celery_worker:
    build:
      context: ./app
      target: grai-worker
    volumes:
      - ./app/:/usr/src/app/
    environment:
      - DB_HOST=db
      - REDIS_HOST=redis
      - DJANGO_SETTINGS_MODULE=the_guide.settings.dev
    depends_on:
      - redis
      - db
    scale: 1

  celery_beat_worker:
    build:
      context: ./app
      target: grai-beat-worker
    volumes:
      - ./app/:/usr/src/app/
    environment:
      - DB_HOST=db
      - REDIS_HOST=redis
      - DJANGO_SETTINGS_MODULE=the_guide.settings.dev
    depends_on:
      - redis
      - db

  frontend:
    build: ../grai-frontend
    ports:
      - 3000:80
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - the_guide

  db:
    image: postgres:14.3-alpine
    shm_size: 1g
    environment:
      - POSTGRES_USER=grai
      - POSTGRES_PASSWORD=grai
      - POSTGRES_DB=grai
    ports:
      - 5432:5432
    healthcheck:
      test: "pg_isready -U grai"
      interval: 2s
      timeout: 2s
      retries: 15
    command:
      [
        "postgres",
        "-c",
        "log_statement=none",
        "-c",
        "wal_level=logical",
        "-c",
        "max_replication_slots=10",
        "-c",
        "max_wal_senders=5",
      ]

  redis:
    image: redis/redis-stack:6.2.6-v9
    environment:
      - REDISGRAPH_ARGS=RESULTSET_SIZE 100000
    ports:
      - 6379:6379
      - 8001:8001

  flower:
    image: mher/flower
    ports:
      - 5557:5555
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0

    depends_on:
      - redis
      - db

  retake-core:
    extends:
      file: ./docker-compose.retake.yml
      service: retake-core
    profiles:
      - retake
    ports:
      - 9200:9200

  retake-api:
    extends:
      file: ./docker-compose.retake.yml
      service: retake-api
    profiles:
      - retake
    ports:
      - 8002:8000

  pgsync:
    extends:
      file: ./docker-compose.retake.yml
      service: pgsync
    profiles:
      - retake
    ports:
      - 7433:7433
