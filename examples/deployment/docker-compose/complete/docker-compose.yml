version: "3.7"

services:
  db:
    image: ankane/pgvector
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - POSTGRES_USER=grai
      - POSTGRES_PASSWORD=grai
      - POSTGRES_DB=grai
    ports:
      - 5432:5432
    healthcheck:
      test: "pg_isready -U grai"
      interval: 2s
      timeout: 2s
      retries: 15

  redis:
    image: redis/redis-stack:6.2.6-v9
    environment:
      - REDISGRAPH_ARGS=RESULTSET_SIZE 100000
    restart: always
    ports:
      - 6379:6379
      - 8001:8001

  the_guide:
    image: ghcr.io/grai-io/grai-core/grai-server:latest
    # extra_hosts are not required but provided so users can easily connect to services running on the host machine
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - 8000:8000
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=grai
      - DB_USER=grai
      - DB_PASSWORD=grai
      - CREATE_SAMPLE_DATA=true
      - DJANGO_SUPERUSER_USERNAME=null@grai.io
      - DJANGO_SUPERUSER_PASSWORD=super_secret
      - DJANGO_SUPERUSER_WORKSPACE=default
      - SERVER_HOST=localhost
      - FRONTEND_HOST=localhost
      - FRONTEND_URL=http://localhost:3000
      - REDIS_HOST=redis
    depends_on:
      - redis
      - db
    healthcheck:
      test: "curl -f -v -H 'Accept: application/json' http://localhost:8000/health/"
      interval: 2s
      timeout: 5s
      retries: 10
      start_period: 20s

  frontend:
    image: ghcr.io/grai-io/grai-core/grai-frontend:latest
    ports:
      - 3000:80
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - the_guide

  celery_worker:
    image: ghcr.io/grai-io/grai-core/grai-worker:latest
    # extra_hosts are not required but provided so users can easily connect to services running on the host machine
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=grai
      - DB_USER=grai
      - DB_PASSWORD=grai
      - DJANGO_SUPERUSER_USERNAME=null@grai.io
      - DJANGO_SUPERUSER_PASSWORD=super_secret
      - DJANGO_SUPERUSER_WORKSPACE=default
      - SERVER_HOST=localhost
      - FRONTEND_HOST=localhost
      - FRONTEND_URL=http://localhost:3000
      - REDIS_HOST=redis
    depends_on:
      - redis
      - db

  celery_beat_worker:
    image: ghcr.io/grai-io/grai-core/grai-beat-worker:latest
    # extra_hosts are not required but provided so users can easily connect to services running on the host machine
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_NAME=grai
      - DB_USER=grai
      - DB_PASSWORD=grai
      - DJANGO_SUPERUSER_USERNAME=null@grai.io
      - DJANGO_SUPERUSER_PASSWORD=super_secret
      - DJANGO_SUPERUSER_WORKSPACE=default
      - SERVER_HOST=localhost
      - FRONTEND_HOST=localhost
      - FRONTEND_URL=http://localhost:3000
      - REDIS_HOST=redis
    depends_on:
      - redis
      - db

  flower:
    image: mher/flower
    ports:
      - 5557:5555
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0

  retake-core:
    image: opensearchproject/opensearch:2.9.0
    profiles:
      - retake
    ports:
      - 9200:9200
    environment:
      - discovery.type=single-node
      - plugins.security.disabled=false
      - plugins.ml_commons.model_access_control_enabled=true
      - plugins.ml_commons.only_run_on_ml_node=false

  retake-api:
    image: retake/retakesearch:latest
    profiles:
      - retake
    ports:
      - 8002:8000
    depends_on:
      - retake-core
    environment:
      API_KEY: retake-test-key
      OPENSEARCH_HOST: retake-core
      OPENSEARCH_PORT: 9200
      OPENSEARCH_USER: admin
      OPENSEARCH_PASSWORD: admin
      OPENSEARCH_VERIFY_CERTS: False
      PGSYNC_HOST: pgsync
      PGSYNC_PORT: 7433

  pgsync:
    image: retake/retakesync:latest
    profiles:
      - retake
    ports:
      - 7433:7433
    sysctls:
      - net.ipv4.tcp_keepalive_time=200
      - net.ipv4.tcp_keepalive_intvl=200
      - net.ipv4.tcp_keepalive_probes=5
    labels:
      org.label-schema.name: "pgsync"
      org.label-schema.description: "Postgres to OpenSearch sync"
      com.label-schema.service-type: "daemon"
    depends_on:
      - retake-core
      - retake-api
      - redis
    environment:
      LOG_LEVEL: WARNING
      ELASTICSEARCH_HOST: retake-core
      ELASTICSEARCH_PORT: 9200
      ELASTICSEARCH_USER: admin
      ELASTICSEARCH_PASSWORD: admin
      ELASTICSEARCH_SCHEME: https
      ELASTICSEARCH_USE_SSL: True
      ELASTICSEARCH_VERIFY_CERTS: False
      REDIS_HOST: redis
      REDIS_PORT: 6379
      ELASTICSEARCH: false
      OPENSEARCH: true
