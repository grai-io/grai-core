backend:
  name: "backend"
  host: "<PR-NUM>-api.dev.grai.io"

  replicaCount: 1

  image:
    repository: ghcr.io/grai-io/grai-core/grai-server
    pullPolicy: Always
    tag: "<TAG>"

  service:
    port: 8000

frontend:
  name: "frontend"
  host: "<PR-NUM>.dev.grai.io"

  image:
    repository: ghcr.io/grai-io/grai-core/grai-frontend
    pullPolicy: Always
    tag: "<TAG>"

  service:
    port: 80

celery_worker:
  name: "celery-worker"

  replicaCount: 1

  image:
    repository: ghcr.io/grai-io/grai-core/grai-server
    pullPolicy: Always
    tag: "<TAG>"

celery_beat_worker:
  name: "celery-beat-worker"

  replicaCount: 1

  image:
    repository: ghcr.io/grai-io/grai-core/grai-server
    pullPolicy: Always
    tag: "<TAG>"

ingress:
  enabled: true
  className: "alb"
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/load-balancer-name: alb-dev
    alb.ingress.kubernetes.io/group.name: ingress-dev
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443}, {"HTTP":80}]'
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/healthcheck-path: /health

superuser:
  username: "null@grai.io"
  password: "super_secret"
  workspace: "default"

postgresql:
  enabled: true

redis:
  enabled: true
  architecture: standalone
  auth:
    enabled: false

# Setups up postgres helm chart when postgres.enabled=true
global:
  postgresql:
    auth:
      database: "grai"
      username: "grai"
      password: "grai"
      postgresPassword: "grai"

connections:
  database:
    host: "<PR-NUM>-postgresql"
    port: "5432"
    database: "grai"
    username: "grai"
    password: "grai"

  redis:
    host: "<PR-NUM>-redis-master"
    port: "6379"
