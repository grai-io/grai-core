name: Postgres Integration CI

on:
  pull_request:
    paths:
      - "grai-integrations/source-postgres/**"
      - "grai-client/**"
      - "grai-server/**"
      - ".github/workflows/integration-postgres-ci.yml"

concurrency:
  group: ${{ github.ref }}-postgres-ci
  cancel-in-progress: true


env:
  project_dir: "grai-integrations/source-postgres"
  py_ver: "${{ vars.PY_VER }}"
  poetry_ver: "${{ vars.POETRY_VER }}"

jobs:
  lint-integration-postgres:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.project_dir }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: "${{ env.py_ver }}"

      - run: pip install black isort

      - run: |
          black . --check
          isort . --profile black --check

  tests-integration-postgres:
    needs: lint-integration-postgres
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.project_dir }}
    services:
      postgres:
        image: ankane/pgvector:latest
        env:
          POSTGRES_USER: grai
          POSTGRES_PASSWORD: grai
          POSTGRES_DB: grai
        ports:
          - 5433:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 2s --health-timeout 5s --health-retries 15
    steps:
      - uses: actions/checkout@v4

      - name: Set up Postgres db
        working-directory: ${{ env.project_dir }}/dev-database
        env:
          POSTGRES_USER: grai
          POSTGRES_PASSWORD: grai
          POSTGRES_DB: grai
          PORT: 5433
          HOST: postgres
        run: |
          bash init-db.sh

      - uses: actions/setup-python@v5
        with:
          python-version: "${{ env.py_ver }}"

      - uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "${{ env.poetry_ver }}"

      - run: poetry install

      - name: Run Postgres Tests
        run: poetry run pytest
