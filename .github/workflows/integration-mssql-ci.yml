name: MsSQL Integration CI

on:
  pull_request:
    paths:
      - "grai-integrations/source-mssql/**"
      - "grai-client/**"
      - "grai-server/**"
      - ".github/workflows/integration-mssql-ci.yml"

concurrency:
  group: ${{ github.ref }}-mssql-ci
  cancel-in-progress: true

env:
  project_dir: "grai-integrations/source-mssql"
  DB_DATABASE: grai
  DB_USER: sa
  DB_PASSWORD: GraiGraiGr4i
  DB_HOST: localhost
  py_ver: "${{ vars.PY_VER }}"
  poetry_ver: "${{ vars.POETRY_VER }}"

jobs:
  lint-integration-mssql:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.project_dir }}
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: "${{ env.py_ver }}"

      - run: pip install black isort

      - run: |
          black . --check
          isort . --profile black --check

  tests-integration-mssql:
    needs: lint-integration-mssql
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.project_dir }}
    services:
      test_db:
        image: mcr.microsoft.com/mssql/server:2022-latest
        env:
          ACCEPT_EULA: "Y"
          MSSQL_SA_PASSWORD: ${{ env.DB_PASSWORD }}
          MSSQL_PID: Developer
        ports:
          - 1433:1433

    steps:
      - uses: actions/checkout@v4

      - name: Install SQL Server tools (sqlcmd)
        run: |
          # curl https://packages.microsoft.com/keys/microsoft.asc | tee /etc/apt/trusted.gpg.d/microsoft.asc
          # curl https://packages.microsoft.com/config/ubuntu/22.04/prod.list | tee /etc/apt/sources.list.d/mssql-release.list
          apt-get update
          ACCEPT_EULA=Y apt-get install -y mssql-tools18 unixodbc-dev
          apt-get install -y mssql-tools18

      - name: Set up SQL db
        working-directory: ${{ env.project_dir }}/data
        env:
          MSSQL_SA_PASSWORD: ${{env.DB_PASSWORD}}
        run: |
          bash init-db.sh

      - uses: actions/setup-python@v5
        with:
          python-version: "${{ env.py_ver }}"

      - uses: abatilo/actions-poetry@v2
        with:
          poetry-version: "${{ env.poetry_ver }}"

      - run: poetry install

      - name: Run Sql Server Tests
        run: poetry run pytest
